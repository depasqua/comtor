COMTOR Execution Report - Fri, 23 Nov 2012 22:40:26 -0500
===========================================
| Execution Score Summary                 |
===========================================
| Module Name                  | Score    |
-------------------------------------------
| Spell Check                  | 86%      |
| Percentage Methods           | 70%      |
| Check Author                 | 33%      |
| Offensive Words              | 77%      |
===========================================

====================================================================================
Analysis Module: Spell Check
This module compares words found in comments against an English word dictionary.
The COMTOR word dictionary contains more than 97,000 entries. The analysis includes
the list of known Java API classes (JDK), HTML tags and attributes, Java keywords,
and user-defined symbols from the submitted code (class, method, constructor, field
names). COMTOR uses JavaDoc, as such JavaDoc does not provide access to local variables
within methods and blocks. Thus, the word list is not exhaustive.

Notes:
	Javadoc tags (@tag) from constructors and methods are not yet processed.

Analysis: 
	offensiveTest.Test:
		Class comment analysis:
			'xxx' considered a misspelled word on/near line 8
			'COMTOR' considered a misspelled word on/near line 8

		Constructor comment analysis:
			offensiveTest.Test(int): 
				'Multi' considered a misspelled word on/near line 16
				'aboutz' considered a misspelled word on/near line 16

			offensiveTest.Test(int, int): 
				'missingz' considered a misspelled word on/near line 25
				'HHH' considered a misspelled word on/near line 25
				'MMM' considered a misspelled word on/near line 25

		Method comment analysis:
			offensiveTest.Test.returnTrue(): 
				'methodz' considered a misspelled word on/near line 43

		Field comment analysis: 
			offensiveTest.Test.foo: 
				'agout' considered a misspelled word on/near line 10

	offensiveTest.Test2:
		No spelling errors were found in processing this class.

	offensiveTest.Test3:
		No spelling errors were found in processing this class.

Notes:
	9 word(s) in your source code are considered spelled incorrectly due to the fact
that they are listed in our dictionary. In order to create a greater level of professionalism
in your source code, please consider editing these words. If you believe you have
a false positive result, please email the COMTOR team at comtor@tcnj.edu and we
consider your submission to the dictionary.

Overall module score: 86%

Execution time: 5(ms)

Execution metrics: 
	14% of the words in the comments were misspelled.
	66 words analyzed.
	3 class(es) were processed.
	28 correctly spelled words (excludes duplicates)
	9 incorrectly spelled words (excludes duplicates)
	29 duplicate good words
	0 duplicate bad words
====================================================================================
Analysis Module: Percentage Methods
This module calculates the percentage of methods that have associated comments. This
calculation will include both methods and constructors. The reported score is the
overall percentage of methods and constructors which are commented. The length and/or
content of the comment is not considered.

Notes:
	In this module's report, commented constructors and methods are not shown. Only uncommented
constructors or methods are listed, when identified during analysis.

Analysis: 
	offensiveTest.Test:
		Class comment analysis:
			2 of the 2 constructors (100%) are commented.
			2 of the 2 methods (100%) are commented.

	offensiveTest.Test2:
		Class comment analysis:
			0 of the 1 constructors (0%) are commented.

		Constructor comment analysis:
			offensiveTest.Test2(): 
				offensiveTest.Test2() is not commented at/near line 12.

	offensiveTest.Test3:
		Class comment analysis:
			1 of the 3 constructors (33%) are commented.
			2 of the 2 methods (100%) are commented.

		Constructor comment analysis:
			offensiveTest.Test3(boolean): 
				offensiveTest.Test3(boolean) is not commented at/near line 28.

			offensiveTest.Test3(java.lang.String): 
				offensiveTest.Test3(java.lang.String) is not commented at/near line 32.

Notes:
	3 location(s) in your source code are missing comments. Consider commenting all constructors
and methods to reduce this amount. Additionally, if you are receving false results,
please be sure you are using the Javadoc commenting style.

Overall module score: 70%

Execution time: 3(ms)

Execution metrics: 
	3 class(es) were processed.
	4 method(s) were processed.
	4 method(s) were commented.
	100% method(s) were commented across all classes.
	6 constructors(s) were processed.
	3 constructors(s) were commented.
	50% constructors(s) were commented across all classes.
====================================================================================
Analysis Module: Check Author
This module validates the presence of the @author tag in each class. Additionally,
this module checks for non-blank @author tags (missing author name).

Notes:
	References to line numbers in this report are generally to the subsequent non-comment Java statement that follows the commment/comment block under analysis.

Analysis: 
	offensiveTest.Test:
		Class comment analysis:
			No @author tags found.

	offensiveTest.Test2:
		Class comment analysis:
			An empty @author tag was found in the comment block preceeding line 12
			An empty @author tag was found in the comment block preceeding line 12

	offensiveTest.Test3:
		Class comment analysis:
			@author tag found: Peter DePasquale

Notes:
	1 @author tags are missing from class-level documentation. 2 @author tag(s) are empty
and have no author provided.

Overall module score: 33%

Execution time: 1(ms)

Execution metrics: 
	3 class(es) were processed.
	2 class(es) contained errors related to the use of the @author tag.
	1 class(es) are missing @author tags.
	2 @author tag(s) are empty (missing names following tag)
	2 @author tag(s) were located with text following the tags.
====================================================================================
Analysis Module: Offensive Words
This module identifies "offensive" English words used in comments at the class, method,
and field level. Usage of these types of words is considered to be unprofessional.
The COMTOR dictionary list of offensive words contains over 1,300 words and word
variants. If you have a suggestion for a word that should be added to the dictionary,
please email the COMTOR team at comtor@tcnj.edu.

Notes:
	Method tags which are not @param, @return, or @throws are not currently processed.

Analysis: 
	offensiveTest.Test:
		Class comment analysis:
			'xxx' considered an offensive word on/near line 8

		Constructor comment analysis:
			offensiveTest.Test(int, int): 
				'fuck' considered an offensive word on/near line 25

				two (@param two): 
					'fuck' considered an offensive word on/near line 25

				three (@param three): 
					'dick' considered an offensive word on/near line 25

				NullPointerException (@throws NullPointerException): 
					'shit' considered an offensive word on/near line 25

		Method comment analysis:
			offensiveTest.Test.main(java.lang.String[]): 
				'fuck' considered an offensive word on/near line 32

				args (@param args): 
					'ass' considered an offensive word on/near line 32

				NullPointerException (@throws NullPointerException): 
					'dick' considered an offensive word on/near line 32

			offensiveTest.Test.returnTrue(): 
				(@return): 
					'bullshit' considered an offensive word on/near line 43

	offensiveTest.Test2:
		No offensive words were found in processing this class.

	offensiveTest.Test3:
		Class comment analysis:
			'shit' considered an offensive word on/near line 11

		Constructor comment analysis:
			offensiveTest.Test3(int): 
				'fuck' considered an offensive word on/near line 24

				foo (@param foo): 
					'shit' considered an offensive word on/near line 24

		Method comment analysis:
			offensiveTest.Test3.returnTrue(): 
				(@return): 
					'fuck' considered an offensive word on/near line 48
					'shit' considered an offensive word on/near line 48

			offensiveTest.Test3.main(java.lang.String[]): 
				'ass' considered an offensive word on/near line 41

				args (@param args): 
					'cock' considered an offensive word on/near line 41

		Field comment analysis: 
			offensiveTest.Test3.field2: 
				'fucking' considered an offensive word on/near line 17
				'fuck' considered an offensive word on/near line 17

Notes:
	18 word(s) in your source code are considered offensive due to the fact that they
are listed in our 'offensive word list'. In order to create a greater level of professionalism
in your source code, please consider editing these words.

Overall module score: 77%

Execution time: 8(ms)

Execution metrics: 
	1 package(s) were processed.
	3 class(es) were processed.
	6 constructor(s) were processed.
	4 method(s) were processed.
	5 parameter(s) were processed.
	5 field(s) were processed.
	77 words were processed (including duplicates).
	39 unique words were processed (excludes duplicates).
	18 'offensive' words were identified (including duplicates).
====================================================================================
