<?xml version="1.0"?>

<project name="comtor" default="cloudCompile" basedir=".">
	<description>Build file for the COMTOR application(s)</description>

	<!-- Configure the custom Ant tasks for the Manager application -->
	<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
	<taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
	<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>	

	<!-- Define some basic properties -->
	<property name="thirdpartyjars" location="lamp/comtor_data/code/"/>
	<property name="version" value="2.1.5"/>
	<property name="managerURL" value="http://cloud.comtor.org/manager/text"/>
	
	<!-- Build up a classpath file path for later use. -->
	<condition property="toolsjar" value="${java.home}/../Classes/classes.jar" else="${java.home}/../lib/tools.jar">
		<and>
			<os family="mac"/>
			<os family="unix"/>
		</and>
	</condition>
			
	<path id="comtor.class.path">
		<fileset dir="${thirdpartyjars}">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${toolsjar}"/>
	</path>
	
	<!-- ================ -->
	<!-- START OF TARGETS -->
	<!-- ================ -->
	
	<!-- Initialization tasks (no description attribute, it's a minor task) -->
	<target name="init">
		<tstamp/>
	</target>
	
	<!-- Removes the class files, source backups, and debug output -->
	<target name="clean" description="Clean source backups, old reports, and .class files">
		<ant dir="api/keygen" target="clean"/>
		<ant dir="api/server" target="clean"/>
		<ant dir="api/client" target="clean"/>
		<ant dir="code" target="clean"/>
		<delete dir="${apiservClasses}"/>
		<delete dir="${apiclientClasses}"/>
		
		<delete>
			<fileset dir="." casesensitive="yes">
				<include name="**/*~ "/>
				<include name=".DS_Store"/>
				<include name="comtorReport.txt"/>
				<include name="comtorSrc.jar"/>
				<include name="trace-*.txt"/>
			</fileset>
		</delete>		
	</target>
	
	<!-- Creates comtor.jar and places it in the proper path for LAMP-stack deployment (used for experiments) -->
	<target name="lamp" description="jars and deploys comtor.jar to proper directory" depends="cloudCompile">
		<jar destfile="${thirdpartyjars}/comtor.jar" basedir="${cloudClasses}">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Title" value="COMTOR WWW DEPLOY"/>
				<attribute name="Implementation-Version" value="${version} ${TODAY}"/> 
				<attribute name="Implementation-Vendor" value="The College of New Jersey"/>
			</manifest>
		</jar>		
	</target>
	
	<!-- Builds the command line version (stand alone) jar file of COMTOR -->
	<target name="cli" description="Builds a distributable Jar file for use as a stand-alone application">
		<ant dir="code" target="cli" inheritRefs="true"/>
	</target>

	<!-- Runs the command line version (stand alone) via jar file of COMTOR -->
	<target name="runcli" depends="cli" description="Runs the CLI version of COMTOR via the jar file on the dir path provided.">
		<input message="Input the directory (absolute or relative) path to the location of the testing code:" addproperty="dirpath"/>
		<java jar="comtor.jar" fork="true">
			<arg value="-dir"/>
			<arg path="${dirpath}"/>
		</java>

		<delete>
			<fileset dir=".">
				<include name="badwords.txt"/>
				<include name="dictionary.txt"/>
				<include name="htmltags.txt"/>
				<include name="javaKeywords.txt"/>
				<include name="javaclasslist.txt"/>
				<include name="usersubmitted.txt"/>
			</fileset>
		</delete>
	</target>

	<!-- Builds a jar file of the COMTOR source code (used for dogfooding) -->
	<target name="srcjar" description="Builds a jar file of the COMTOR source code.">
		<jar destfile="comtorSrc.jar">
			<fileset dir="${cloudSrc}">
				<include name="**/*.java"/>
				<exclude name="org/comtor/analyzers/GeneralResources/*.java"/>
				<exclude name="org/comtor/analyzers/InteractionsResources/*.java"/>
				<exclude name="org/comtor/incomplete/*.java"/>
				<exclude name="org/json/*.java"/>
			</fileset>
		</jar>
	</target>
	
	<!-- Ensures the user has set the deployment properties to provide to the servlet container -->
	<target name="-credentials.check">
		<condition property="credentials.set">
			<and>
				<isset property="username"/>
				<isset property="password"/>
			</and>
		</condition>
		<antcall target="-credentials.fail"/>
	</target>
	
	<!-- Stops the build and outputs a message if the deployment properties were not set by user -->
	<target name="-credentials.fail" unless="credentials.set">
		<fail>Please set the following properties:
	* the username of the servlet manager: -Dusername=user
	* the password of the servlet manager: -Dpassword=passwd
		</fail>
	</target>


	<!-- CLOUD CLIENT -->
	<target name="cloudCompile" description="Compile the source code of the cloud app" depends="init">
		<ant dir="code" inheritRefs="true"/>
	</target>

	<target name="cloudWar" description="Builds the keygen war file">
		<ant dir="code" target="createWar" inheritRefs="true"/>
	</target>

	<!-- Ant-based deploy for servlet version -->
	<!-- Requires the catalina-ant.jar file in the ant/lib directory locally. See 
	     http://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#Executing_Manager_Commands_With_Ant or, 
	     http://tomcat.apache.org/tomcat-6.0-doc/manager-howto.html#Executing_Manager_Commands_With_Ant -->
	<target name="cloudWarDeploy" depends="-credentials.check" description="Deploys the cloud web application.">
		<ant dir="code" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="cloudWarUndeploy" depends="-credentials.check" description="Undeploys the cloud web application.">
		<ant dir="code" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="cloudWarRedeploy" depends="-credentials.check" description="Redeploys the cloud web application.">
		<ant dir="code" target="warRedeploy" inheritRefs="true"/>
	</target>


	<!-- KEYGEN -->
	<target name="keygenCompile" description="Compiles the source code of the keygen app" depends="init">
	 	<ant dir="api/keygen" inheritRefs="true"/>
 	</target>
	
	<target name="keygenWar" description="Builds the keygen war file">
		<ant dir="api/keygen" target="createWar" inheritRefs="true"/>
	</target>

	<target name="keygenWarDeploy" depends="-credentials.check" description="Deploys the keygen war file">
		<ant dir="api/keygen" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="keygenWarUndeploy" depends="-credentials.check" description="Undeploys the keygen war file">
		<ant dir="api/keygen" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="keygenWarRedeploy" depends="-credentials.check" description="Redeploys the keygen war file">
		<ant dir="api/keygen" target="warRedeploy" inheritRefs="true"/>
	</target>


	<!-- API Server -->
	<target name="compileAPIServer" description="Compiles the source code of the api server app" depends="init">
		<ant dir="api/server" target="compile" inheritRefs="true"/>
	</target>
	

	<!-- API Client -->
	<target name="compileAPIClient" description="Compiles the source code of the api client app" depends="init">
		<ant dir="api/client" target="compile" inheritRefs="true"/>
	</target>

	<target name="runAPIClient" description="Runs the API client">
		<ant dir="api/client" target="runAPIClient" inheritRefs="true"/>
	</target>
	
</project>
