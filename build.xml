<?xml version="1.0"?>

<project name="comtor" default="cloudCompile" basedir=".">
	<description>Build file for the COMTOR application(s)</description>
	<defaultexcludes remove="**/.DS_Store"/>

	<!-- Configure the custom Ant tasks for the Manager application -->
	<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
	<taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
	<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>	

	<!-- Define some basic properties -->
	<property name="thirdpartyjars" location="third-party/lib"/>
	<property name="version" value="2.1.5"/>
	<property name="releasehost" value="cloud.comtor.org"/>
	<property name="devhost" value="54.225.226.33"/>
	<property name="localhost" value="localhost"/>
	<property name="managerURL" value="http://${releasehost}/manager/text"/>
	
	<!-- Build up a classpath file path for later use. -->
	<condition property="toolsjar" value="${java.home}/../Classes/classes.jar" else="${java.home}/../lib/tools.jar">
		<and>
			<os family="mac"/>
			<os family="unix"/>
		</and>
	</condition>
			
	<path id="comtor.class.path">
		<fileset dir="${thirdpartyjars}">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${toolsjar}"/>
		<pathelement path="core/comtorcore.jar"/>
	</path>
	
	<!-- ================ -->
	<!-- START OF TARGETS -->
	<!-- ================ -->
	
	<!-- Initialization tasks (no description attribute, it's a minor task) -->
	<target name="init">
		<tstamp/>
	</target>
	
	<!-- Removes the class files, source backups, and debug output -->
	<target name="clean" description="Clean source backups, old reports, and .class files">
		<ant dir="api/keygen" target="clean"/>
		<ant dir="api/apiserv" target="clean"/>
		<ant dir="wordProblemSubmitter" target="clean"/>
		<ant dir="code" target="clean"/>
		<ant dir="core" target="clean"/>
		<ant dir="lamp" target="clean"/>
		
		<delete>
			<fileset dir="." casesensitive="yes">
				<include name="**/*~ "/>
				<include name="**/*.class"/>
				<include name="**/.DS_Store"/>
				<include name="comtorReport.txt"/>
				<include name="trace-*.txt"/>
			</fileset>
		</delete>		
	</target>
	
	<!-- Sets the deployment host based on the user-provided input, or uses localhost (default) -->
	<target name="-sethost">
		<condition property="deployhost" value="http://${deploy}:8080/manager/text" else="http://localhost:8080/manager/text">
			<isset property="deploy"/>
		</condition>
	</target>

	<!-- Ensures the user has set the deployment properties to provide to the servlet container -->
	<target name="-credentials.check">
		<condition property="credentials.set">
			<and>
				<isset property="username"/>
				<isset property="password"/>
			</and>
		</condition>
		<antcall target="-credentials.fail"/>
	</target>
	
	<!-- Stops the build and outputs a message if the deployment properties were not set by user -->
	<target name="-credentials.fail" unless="credentials.set">
		<fail>Please set the following properties:
	* the username of the servlet manager: -Dusername=user
	* the password of the servlet manager: -Dpassword=passwd
		</fail>
	</target>


	<!-- Builds the command line version (stand alone) jar file of COMTOR -->
	<target name="cli" description="Builds a distributable Jar file for use as a stand-alone application">
		<ant dir="code" target="cli" inheritRefs="true"/>
	</target>

	<!-- Runs the command line version (stand alone) via jar file of COMTOR -->
	<target name="runcli" depends="cli" description="Runs the CLI version of COMTOR via the jar file on the dir path provided.">
		<ant dir="code" target="executeCli" inheritRefs="true"/>
	</target>

	<!-- Runs the command line version (stand alone) via jar file of COMTOR on the test cases in the tests/ -->
	<target name="testcli" depends="cli" description="Runs the CLI version of COMTOR against the tests/ directory">
		<ant dir="code" target="testCli" inheritRefs="true"/>
	</target>

	<!-- Builds a jar file of the COMTOR source code (used for dogfooding) -->
	<target name="srcjar" description="Builds a jar file of the COMTOR source code.">
		<ant dir="code" target="srcjar" inheritRefs="true"/>
	</target>
	
	<!-- Builds the COMTOR core jar file -->
	<target name="corejar" description="Builds the COMTOR core library jar file.">
		<ant dir="core" target="jar" inheritRefs="true"/>
	</target>


	<!-- CLOUD CLIENT -->
	<target name="cloudCompile" description="Compile the source code of the cloud app" depends="init">
		<ant dir="code" inheritRefs="true"/>
	</target>

	<target name="cloudWar" description="Builds the keygen war file of the cloud app">
		<ant dir="code" target="createWar" inheritRefs="true"/>
	</target>


	<!-- Ant-based deploy for servlet version -->
	<!-- Requires the catalina-ant.jar file in the ant/lib directory locally. See 
	     http://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#Executing_Manager_Commands_With_Ant or, 
	     http://tomcat.apache.org/tomcat-6.0-doc/manager-howto.html#Executing_Manager_Commands_With_Ant -->
	<target name="cloudWarDeploy" depends="-credentials.check" description="Deploys the cloud web application.">
		<ant dir="code" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="cloudWarUndeploy" depends="-credentials.check" description="Undeploys the cloud web application.">
		<ant dir="code" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="cloudWarRedeploy" depends="-credentials.check" description="Redeploys the cloud web application.">
		<ant dir="code" target="warRedeploy" inheritRefs="true"/>
	</target>


	<!-- KEYGEN -->
	<target name="keygenCompile" description="Compiles the source code of the keygen app" depends="init">
	 	<ant dir="api/keygen" inheritRefs="true"/>
 	</target>
	
	<target name="keygenWar" description="Builds the keygen war file">
		<ant dir="api/keygen" target="createWar" inheritRefs="true"/>
	</target>

	<target name="keygenWarDeploy" depends="-credentials.check" description="Deploys the keygen war file">
		<ant dir="api/keygen" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="keygenWarUndeploy" depends="-credentials.check" description="Undeploys the keygen war file">
		<ant dir="api/keygen" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="keygenWarRedeploy" depends="-credentials.check" description="Redeploys the keygen war file">
		<ant dir="api/keygen" target="warRedeploy" inheritRefs="true"/>
	</target>


	<!-- Word Problem Submitter Server -->
	<target name="wordProblemCompile" description="Compiles the source code of the app" depends="init">
	 	<ant dir="wordProblemSubmitter" target="compile" inheritRefs="true"/>
 	</target>
	
	<target name="wordProblemCreateWar" description="Builds the war file">
		<ant dir="wordProblemSubmitter" target="createWar" inheritRefs="true"/>
	</target>

	<target name="wordProblemWarDeploy" depends="-credentials.check" description="Deploys the war file">
		<ant dir="wordProblemSubmitter" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="wordProblemWarUndeploy" depends="-credentials.check" description="Undeploys the war file">
		<ant dir="wordProblemSubmitter" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="wordProblemWarRedeploy" depends="-credentials.check" description="Redeploys the war file">
		<ant dir="wordProblemSubmitter" target="warRedeploy" inheritRefs="true"/>
	</target>


	<!-- API Server -->
	<target name="apiServCompile" depends="init, corejar" description="Compiles the source code of the api server app">
	 	<ant dir="api/apiserv" target="apiServCompile" inheritRefs="true"/>
 	</target>
	
	<target name="apiServWar" depends="apiServCompile" description="Builds the api server war file">
		<ant dir="api/apiserv" target="createWar" inheritRefs="true"/>
	</target>

	<target name="apiServWarDeploy" depends="-credentials.check, -sethost, corejar" description="Deploys the api server war file">
		<ant dir="api/apiserv" target="warDeploy" inheritRefs="true"/>
	</target>

	<target name="apiServWarUndeploy" depends="-credentials.check, -sethost" description="Undeploys the api server war file">
		<ant dir="api/apiserv" target="warUndeploy" inheritRefs="true"/>
	</target>

	<target name="apiServWarRedeploy" depends="-credentials.check, -sethost, corejar" description="Redeploys the api server war file">
		<ant dir="api/apiserv" target="warRedeploy" inheritRefs="true"/>
	</target>

</project>
